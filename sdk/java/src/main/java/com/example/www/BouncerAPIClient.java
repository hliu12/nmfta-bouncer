/*
 * BouncerAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.example.www;

import com.example.www.controllers.*;
import com.example.www.http.client.HttpClient;

public class BouncerAPIClient {
    /**
     * Singleton access to Blacklist controller
     * @return	Returns the BlacklistController instance 
     */
    public BlacklistController getBlacklist() {
        return BlacklistController.getInstance();
    }

    /**
     * Singleton access to UsersLoginRegistration controller
     * @return	Returns the UsersLoginRegistrationController instance 
     */
    public UsersLoginRegistrationController getUsersLoginRegistration() {
        return UsersLoginRegistrationController.getInstance();
    }

    /**
     * Singleton access to WhitelistGeoLocations controller
     * @return	Returns the WhitelistGeoLocationsController instance 
     */
    public WhitelistGeoLocationsController getWhitelistGeoLocations() {
        return WhitelistGeoLocationsController.getInstance();
    }

    /**
     * Singleton access to BlacklistGeoLocations controller
     * @return	Returns the BlacklistGeoLocationsController instance 
     */
    public BlacklistGeoLocationsController getBlacklistGeoLocations() {
        return BlacklistGeoLocationsController.getInstance();
    }

    /**
     * Singleton access to CheckIPAddresses controller
     * @return	Returns the CheckIPAddressesController instance 
     */
    public CheckIPAddressesController getCheckIPAddresses() {
        return CheckIPAddressesController.getInstance();
    }

    /**
     * Singleton access to BlacklistIPAddresses controller
     * @return	Returns the BlacklistIPAddressesController instance 
     */
    public BlacklistIPAddressesController getBlacklistIPAddresses() {
        return BlacklistIPAddressesController.getInstance();
    }

    /**
     * Singleton access to WhitelistIPAddresses controller
     * @return	Returns the WhitelistIPAddressesController instance 
     */
    public WhitelistIPAddressesController getWhitelistIPAddresses() {
        return WhitelistIPAddressesController.getInstance();
    }

    /**
     * Singleton access to Whitelist controller
     * @return	Returns the WhitelistController instance 
     */
    public WhitelistController getWhitelist() {
        return WhitelistController.getInstance();
    }

    /**
     * Get the shared http client currently being used for API calls
     * @return The http client instance currently being used
     */
    public HttpClient getSharedHttpClient() {
        return BaseController.getClientInstance();
    }
    
    /**
     * Set a shared http client to be used for API calls
     * @param httpClient The http client to use
     */
    public void setSharedHttpClient(HttpClient httpClient) {
        BaseController.setClientInstance(httpClient);
    }

    /**
     * Default constructor 
     */     
    public BouncerAPIClient() {
    }

}